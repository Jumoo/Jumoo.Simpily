@inherits Umbraco.Web.Mvc.UmbracoViewPage<SimpilyPasswordResetModel>
@using SimpilyAuth


@if ( TempData["Success"] != null && (bool)TempData["Success"] == true)
{
    <h2>Your password has been reset</h2>
    <p>
        you can now <a href="@SimpilyAuth.LoginUrl">login</a>
    </p>
    return;    
}

<h2>@TempData["Success"]</h2>
     
@using (Html.BeginUmbracoForm<SimpilyAuthSurfaceController>("HandleResetPassword", null, new { @class = "form-horizontal forum-reply-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(SimpilyAuth.ResetPasswordKey, true)

    <fieldset>
        <legend>Reset your password</legend>

        <div class="form-group">
            @Html.LabelFor(m => Model.EmailAddress, new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => Model.EmailAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => Model.EmailAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => Model.Password, new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.PasswordFor(m => Model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => Model.Password)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(m => Model.ConfirmPassword, new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.PasswordFor(m => Model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => Model.ConfirmPassword)
            </div>
        </div>

        <div class="col-sm-9 col-sm-offset-3">
            <input type="submit" value="Reset" class="btn btn-lg btn-primary" />
        </div>

    </fieldset>
}